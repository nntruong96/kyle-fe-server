{"version":3,"file":"static/js/79.5a2d1892.chunk.js","mappings":"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","sources":["pages/AuthPages/Login.jsx","components/Input/PasswordField.jsx","components/Input/TextField.jsx","pages/AuthPages/Template.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Template from './Template';\nimport Client from 'rest_client/baseClient';\nimport { createCookie } from 'utils/cookies';\nimport Constants from 'utils/Constants';\nimport { useNavigate } from 'react-router';\nimport { updateData } from 'redux/reducers/user';\nimport { useDispatch } from 'react-redux';\nfunction Login() {\n  const http = new Client();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [data, setData] = useState({\n    username: '',\n    password: '',\n  });\n  const submit = async () => {\n    setLoading(true);\n    try {\n      let res = await http.post('api/v1/auth/login', data);\n      if (res && res.data.error_message) {\n        setLoading(false);\n        return setError(res.data.error_message);\n      }\n      dispatch(updateData(res.data.data));\n      createCookie(Constants.ACCESS_TOKEN, res.data.accessToken);\n      navigate('/');\n    } catch (err) {\n      console.log(err);\n      if (err.error_message) {\n        setError(err.error_message);\n      } else {\n        setError(err);\n      }\n    }\n    setLoading(false);\n  };\n  const isDisabledButton = () => {\n    return !data.username || !data.password;\n  };\n  return (\n    <Template\n      title=\"Login\"\n      submitLabel=\"Login\"\n      isLoading={loading}\n      isDisabledButton={isDisabledButton()}\n      onSubmit={submit}\n      error={error}\n      onClickGmail={() => {\n        alert('gmail');\n      }}\n      onClickApple={() => {\n        alert('apple');\n      }}\n      form={[\n        {\n          name: 'username',\n          placeholder: 'Username',\n          value: data.username,\n          onChange: (e) => {\n            setData({ ...data, username: e.target.value });\n          },\n        },\n        {\n          name: 'password',\n          placeholder: 'Password',\n          value: data.password,\n          type: 'password',\n          onChange: (e) => {\n            setData({ ...data, password: e.target.value });\n          },\n        },\n      ]}\n      footer={{\n        text: `Don't have an account?`,\n        linkLabel: 'Sign Up',\n        to: '/register',\n      }}\n    />\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport './index.css';\n\nfunction PasswordField(props) {\n  const [show, setShow] = useState(false);\n  const toggleShow = () => {\n    setShow((prev) => !prev);\n  };\n  return (\n    <div className=\"input-container\">\n      <input type={show ? 'text' : 'password'} {...props} />\n      <div className=\"show-hide-icon\" onClick={toggleShow}>\n        {show ? <i className=\"fal fa-eye-slash\"></i> : <i className=\"fal fa-eye\" />}\n      </div>\n    </div>\n  );\n}\n\nexport default PasswordField;\n","import React from 'react';\nimport './index.css';\n\nfunction TextField(props) {\n  return (\n    <div className=\"input-container\">\n      <input type=\"text\" {...props} />\n    </div>\n  );\n}\n\nexport default TextField;\n","import React from 'react';\nimport './Template.css';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PasswordField from 'components/Input/PasswordField';\nimport TextField from 'components/Input/TextField';\nimport BlueButton from 'components/Button/BlueButton';\n\nTemplate.propTypes = {\n  title: PropTypes.string,\n  submitLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  form: PropTypes.array,\n  footer: PropTypes.object,\n  onClickGmail: PropTypes.func,\n  onClickApple: PropTypes.func,\n  checkbox: PropTypes.object,\n  disabled: PropTypes.any,\n  error: PropTypes.any,\n  isDisabledButton: PropTypes.any,\n  isLoading: PropTypes.bool,\n};\n\nfunction Template(props) {\n  const {\n    isDisabledButton,\n    error,\n    disabled,\n    title,\n    submitLabel,\n    onSubmit,\n    form,\n    footer,\n    onClickGmail,\n    onClickApple,\n    checkbox,\n    isLoading,\n  } = props;\n  return (\n    <div className=\"auth-page__background\">\n      <div className=\"glow-point-left\" />\n      <div className=\"glow-point-right\" />\n      <img src=\"/assets/img/login-star.svg\" className=\"star one\" />\n      <img src=\"/assets/img/login-star.svg\" className=\"star two\" />\n      <img src=\"/assets/img/login-star.svg\" className=\"star three\" />\n\n      <div className=\"auth-form__container\">\n        <div className=\"auth-form\">\n          <div className=\"auth-form__logo\">\n            <Link to={'#'}>\n              <img src=\"/assets/img/logo.svg\" alt=\"\" /> PropSelect\n            </Link>\n          </div>\n          <p className=\"auth-form__title\">{title}</p>\n\n          <div className=\"auth-form__content\">\n            <div className=\"auth-form__divider\" />\n            <div className=\"auth-form__text-fields\">\n              {form.map((item, index) => {\n                // Todo: create reuse component Input and PasswordInput\n                return item.type === 'password' ? (\n                  <PasswordField\n                    key={index}\n                    placeholder={item.placeholder}\n                    disabled={disabled}\n                    onChange={item.onChange}\n                  />\n                ) : (\n                  <TextField key={index} placeholder={item.placeholder} disabled={disabled} onChange={item.onChange} />\n                );\n              })}\n            </div>\n            <div className=\"auth-form__button-container\">\n              <div className=\"btn btn-dark auth-form__gmail\" onClick={onClickGmail}>\n                <img src=\"/assets/img/gmail.png\" /> Gmail\n                <i className=\"fab fa-gmail\" />\n              </div>\n              <div className=\"btn btn-dark auth-form__gmail\" onClick={onClickApple}>\n                <i className=\"fab fa-apple\"></i> Apple\n              </div>\n            </div>\n\n            {checkbox && (\n              <div className=\"auth-form__checkbox\">\n                <input type=\"checkbox\" onChange={checkbox.handleChange} />\n                <p>{checkbox.label}</p>\n              </div>\n            )}\n\n            <BlueButton isLoading={isLoading} disabled={disabled || isDisabledButton} onClick={onSubmit}>\n              {submitLabel}\n            </BlueButton>\n            {!!error && <small className=\"text-danger\">{error}</small>}\n\n            <div className=\"auth-form__divider\" />\n            <div className=\"auth-form__footer\">\n              <p>{footer.text}</p>\n              <div>\n                <Link to={footer.to}>{footer.linkLabel}</Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Template;\n"],"names":["http","Client","navigate","useNavigate","dispatch","useDispatch","useState","loading","setLoading","error","setError","username","password","data","setData","submit","post","res","error_message","updateData","createCookie","Constants","accessToken","console","log","title","submitLabel","isLoading","isDisabledButton","onSubmit","onClickGmail","alert","onClickApple","form","name","placeholder","value","onChange","e","target","type","footer","text","linkLabel","to","props","show","setShow","className","onClick","prev","disabled","checkbox","src","alt","map","item","index","handleChange","label","BlueButton"],"sourceRoot":""}