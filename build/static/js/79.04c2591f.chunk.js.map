{"version":3,"file":"static/js/79.04c2591f.chunk.js","mappings":"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","sources":["pages/AuthPages/Login.jsx","components/Input/PasswordField.jsx","components/Input/TextField.jsx","pages/AuthPages/Template.jsx"],"sourcesContent":["/* eslint-disable no-undef */\nimport React, { useState } from 'react';\nimport Template from './Template';\nimport { createCookie } from 'utils/cookies';\nimport Constants from 'utils/Constants';\nimport { useNavigate } from 'react-router';\nimport { updateData } from 'redux/reducers/user';\nimport { useDispatch } from 'react-redux';\nimport { Button } from '@mui/material';\nimport { handleRequest } from 'redux/actions/handleRequestUtils';\nimport { login, resendEmailVerify, loginGmail } from 'rest_client/apiClient';\nimport Client from 'rest_client/baseClient';\nfunction Login() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [resending, setResending] = useState(false);\n  const [error, setError] = useState('');\n  const [showButtonResend, setShowButtonResend] = useState(false);\n  const [data, setData] = useState({\n    username: '',\n    password: '',\n  });\n  const submit = async () => {\n    setLoading(true);\n    setShowButtonResend(false);\n    setError('');\n    try {\n      let res = await login(data);\n      if (res && res.data.error_message) {\n        if (res.data.error_code === 10002) {\n          setShowButtonResend(true);\n        }\n        setLoading(false);\n        return setError(res.data.error_message);\n      }\n      dispatch(updateData(res.data.data));\n      createCookie(Constants.ACCESS_TOKEN, res.data.accessToken);\n      navigate('/');\n    } catch (err) {\n      console.log(err);\n      if (err.error_message) {\n        setError(err.error_message);\n      } else {\n        setError(err);\n      }\n    }\n    setLoading(false);\n  };\n  const isDisabledButton = () => {\n    return !data.username || !data.password;\n  };\n  const resend = () => {\n    setResending(true);\n    dispatch(\n      handleRequest({\n        requestClient: resendEmailVerify,\n        data: { username: data.username },\n        callback: () => setResending(false),\n        alertSuccess: 'Please check your mail to verify account',\n        showError: true,\n      })\n    );\n  };\n  const _loginGmail = (data) => {\n    setLoading(true);\n    dispatch(\n      handleRequest({\n        requestClient: () => {\n          let http = new Client(process.env.REACT_APP_BACKEND_URL_TEST_HTTPS);\n          return http.post('api/v1/auth/loginGmail', data);\n        },\n        callback: () => setLoading(false),\n        showError: true,\n        successCallback: (data) => {\n          dispatch(updateData(data.data));\n          createCookie(Constants.ACCESS_TOKEN, data.accessToken);\n          navigate('/');\n        },\n      })\n    );\n  };\n  return (\n    <Template\n      title=\"Login\"\n      submitLabel=\"Login\"\n      isLoading={loading}\n      isDisabledButton={isDisabledButton()}\n      onSubmit={submit}\n      error={\n        showButtonResend ? (\n          <p>\n            {error}\n            <Button disabled={resending} onClick={resend} sx={{ marginTop: '4px' }}>\n              Resend Email verify\n            </Button>\n          </p>\n        ) : (\n          error\n        )\n      }\n      onClickGmail={(data) => {\n        _loginGmail(data);\n      }}\n      onClickApple={() => {\n        alert('apple');\n      }}\n      form={[\n        {\n          name: 'username',\n          placeholder: 'Username',\n          value: data.username,\n          onChange: (e) => {\n            setData({ ...data, username: e.target.value });\n          },\n        },\n        {\n          name: 'password',\n          placeholder: 'Password',\n          value: data.password,\n          type: 'password',\n          onChange: (e) => {\n            setData({ ...data, password: e.target.value });\n          },\n        },\n      ]}\n      footer={{\n        text: `Don't have an account?`,\n        linkLabel: 'Sign Up',\n        to: '/register',\n      }}\n    />\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport './index.css';\n\nfunction PasswordField(props) {\n  const [show, setShow] = useState(false);\n  const toggleShow = () => {\n    setShow((prev) => !prev);\n  };\n  return (\n    <div className=\"input-container\">\n      <input type={show ? 'text' : 'password'} {...props} />\n      <div className=\"show-hide-icon\" onClick={toggleShow}>\n        {show ? <i className=\"fal fa-eye-slash\"></i> : <i className=\"fal fa-eye\" />}\n      </div>\n    </div>\n  );\n}\n\nexport default PasswordField;\n","import React from 'react';\nimport './index.css';\n\nfunction TextField(props) {\n  return (\n    <div className=\"input-container\">\n      <input type=\"text\" {...props} />\n    </div>\n  );\n}\n\nexport default TextField;\n","import React from 'react';\nimport './Template.css';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PasswordField from 'components/Input/PasswordField';\nimport TextField from 'components/Input/TextField';\nimport BlueButton from 'components/Button/BlueButton';\nimport { GoogleLogin, useGoogleLogin, hasGrantedAllScopesGoogle } from '@react-oauth/google';\nTemplate.propTypes = {\n  title: PropTypes.string,\n  submitLabel: PropTypes.string,\n  onSubmit: PropTypes.func,\n  form: PropTypes.array,\n  footer: PropTypes.object,\n  onClickGmail: PropTypes.func,\n  onClickApple: PropTypes.func,\n  checkbox: PropTypes.object,\n  disabled: PropTypes.any,\n  error: PropTypes.any,\n  isDisabledButton: PropTypes.any,\n  isLoading: PropTypes.bool,\n};\n\nfunction Template(props) {\n  const {\n    isDisabledButton,\n    error,\n    disabled,\n    title,\n    submitLabel,\n    onSubmit,\n    form,\n    footer,\n    onClickGmail = () => {},\n    onClickApple,\n    checkbox,\n    isLoading,\n  } = props;\n  const login = useGoogleLogin({\n    onSuccess: (codeResponse) => onClickGmail(codeResponse),\n    onError: () => {\n      console.log('Login Failed');\n    },\n  });\n  return (\n    <div className=\"auth-page__background\">\n      <div className=\"glow-point-left\" />\n      <div className=\"glow-point-right\" />\n      <img src=\"/assets/img/login-star.svg\" className=\"star one\" />\n      <img src=\"/assets/img/login-star.svg\" className=\"star two\" />\n      <img src=\"/assets/img/login-star.svg\" className=\"star three\" />\n\n      <div className=\"auth-form__container\">\n        <div className=\"auth-form\">\n          <div className=\"auth-form__logo\">\n            <Link to={'#'}>\n              <img src=\"/assets/img/logo.svg\" alt=\"\" /> PropSelect\n            </Link>\n          </div>\n          <p className=\"auth-form__title\">{title}</p>\n\n          <div className=\"auth-form__content\">\n            <div className=\"auth-form__divider\" />\n            <div className=\"auth-form__text-fields\">\n              {form.map((item, index) => {\n                // Todo: create reuse component Input and PasswordInput\n                return item.type === 'password' ? (\n                  <PasswordField\n                    key={index}\n                    placeholder={item.placeholder}\n                    disabled={disabled}\n                    onChange={item.onChange}\n                  />\n                ) : (\n                  <TextField key={index} placeholder={item.placeholder} disabled={disabled} onChange={item.onChange} />\n                );\n              })}\n            </div>\n            <div className=\"auth-form__button-container\">\n              <GoogleLogin\n                onSuccess={(credentialResponse) => {\n                  onClickGmail(credentialResponse);\n                }}\n                onError={() => {\n                  console.log('Login Failed');\n                }}\n                useOneTap\n              />\n              {/* <div className=\"btn btn-dark auth-form__gmail\" onClick={login}>\n                <img src=\"/assets/img/gmail.png\" /> Gmail\n                <i className=\"fab fa-gmail\" />\n              </div> */}\n            </div>\n\n            {checkbox && (\n              <div className=\"auth-form__checkbox\">\n                <input type=\"checkbox\" id=\"checkbox-auth\" onChange={checkbox.handleChange} />\n                <label htmlFor=\"checkbox-auth\">{checkbox.label}</label>\n              </div>\n            )}\n\n            <BlueButton isLoading={isLoading} disabled={disabled || isDisabledButton} onClick={onSubmit}>\n              {submitLabel}\n            </BlueButton>\n            {!!error && <small className=\"text-danger\">{error}</small>}\n\n            <div className=\"auth-form__divider\" />\n            <div className=\"auth-form__footer\">\n              <p>{footer.text}</p>\n              <div>\n                <Link to={footer.to}>{footer.linkLabel}</Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Template;\n"],"names":["navigate","useNavigate","dispatch","useDispatch","useState","loading","setLoading","resending","setResending","error","setError","showButtonResend","setShowButtonResend","username","password","data","setData","submit","login","res","error_message","error_code","updateData","createCookie","Constants","accessToken","console","log","title","submitLabel","isLoading","isDisabledButton","onSubmit","disabled","onClick","handleRequest","requestClient","resendEmailVerify","callback","alertSuccess","showError","sx","marginTop","onClickGmail","Client","process","post","successCallback","_loginGmail","onClickApple","alert","form","name","placeholder","value","onChange","e","target","type","footer","text","linkLabel","to","props","show","setShow","className","prev","checkbox","useGoogleLogin","onSuccess","codeResponse","onError","src","alt","map","item","index","credentialResponse","useOneTap","id","handleChange","htmlFor","label","BlueButton"],"sourceRoot":""}